package certs

import (
	"testing"
)

func TestDecodeDataSuccess(t *testing.T) {
	testCases := []struct {
		input          string
		expectedOutput string
	}{
		{input: "VGhlIHF1aWNrIGJyb3duIGZveA==", expectedOutput: "The quick brown fox"},
		{input: "VkdobElIRjFhV05ySUdKeWIzZHVJR1p2ZUE9PQo=", expectedOutput: "The quick brown fox"},
		{input: "dGVzdCBkYXRh", expectedOutput: "test data"},
	}

	for _, tc := range testCases {
		result := decodeData(tc.input)
		if result != tc.expectedOutput {
			t.Errorf("Expected '%s', got '%s'", tc.expectedOutput, result)
		}
	}
}

func TestDecodeDataInvalidBase64(t *testing.T) {
	testCases := []string{
		"!!!this is not base64",
		"SGVsbG8gV29ybGQh==",
	}

	for _, tc := range testCases {
		result := decodeData(tc)
		if result != tc {
			t.Errorf("Expected unchanged input '%s', got '%s'", tc, result)
		}
	}
}

var serverCertEncoded = `LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQrakNDQXVLZ0F3SUJBZ0lVTjhwd0wxZGZXYk90dDJtMHJSekx2Z1NOOVljd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1p6RUxNQWtHQTFVRUJoTUNRVlV4RERBS0JnTlZCQWdNQTA1VFZ6RVBNQTBHQTFVRUJ3d0dVM2xrYm1WNQpNUmt3RndZRFZRUUtEQkJUYjJaMGQyRnlaU0JEYjIxd1lXNTVNUXN3Q1FZRFZRUUxEQUpKVkRFUk1BOEdBMVVFCkF3d0ljM0JoY210cWIySXdIaGNOTWpRd01qRTRNRFExT1RBeldoY05Nall3TWpFM01EUTFPVEF6V2pCb01Rc3cKQ1FZRFZRUUdFd0pYVHpFT01Bd0dBMVVFQ0JNRlYyOXliR1F4RGpBTUJnTlZCQWNUQlZkdmNteGtNUmt3RndZRApWUVFLRXhCVGIyWjBkMkZ5WlNCRGIyMXdZVzU1TVFzd0NRWURWUVFMRXdKSlZERVJNQThHQTFVRUF4TUljRzl6CmRHZHlaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBJSURweTFGbkY4UEQKOC9kRHlTNkdEMmdMVFNXc3BzTE5OOUhENlNiZGZMRmgvaU92WjZGb1l0eHJaWUEwUHBqODkwbjhKRG1rRDhkMQpjT21UQXR5OGlzc21GNWhJZzB6dmVJR2Y2OXpsdUJmdzVVZHpxRzRjQ2FpVlhqTk9NVG9jVGJmU1ZXN3hmanQxCjBwK2pLc2xyWDF2L2FCczNqaEZjajdtOVhrdTFqRXBJRUZZeGtyTUVNNXBBeGt2UVBUT2M4QlA4Kzh2QnhOT1MKV0dVdUpwODQ1aVAxQnRFU29CdkVCZU1xdEFCRll5NFZGaDkyd21EUVhiYyt4dE9aYkpFdldXYitOci9RR1FGNgpyV1dWK1E2ODRkNmU2a1ZEdnlFSjVsRVY0OGhVcUZHVVZiMFZuMHhlUG9hTVcwWXRQQWtwWHNMRCs0MzZ0TmhFCmlubXY3SVVoQWdNQkFBR2pnWnd3Z1prd1Z3WURWUjBSQkZBd1RvSUljRzl6ZEdkeVpYT0NDSEJ2YzNSbmNtVnoKZ2lKd2IzTjBaM0psY3k1a1pXWmhkV3gwTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2hSd2IzTjBaM0psY3k1awpaV1poZFd4MExuTjJZekFkQmdOVkhRNEVGZ1FVeHRlMmN6aFFGTTJ5VEV2MlZueFd0Z29MSGYwd0h3WURWUjBqCkJCZ3dGb0FVT2hTSUxZRmdXQ2VvZkl1MWNQcWtIa0xtMGxRd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHRG0KZkJaeEdQeEI0ZTMxdjQzSHNZMlFocTNYOHZlckFCS3BvSkRtK21LV1pSNkVMdEk1SUl0UklPOHlpcFNkSWNyeQpGRjFSK0d1c2xkaUpqdTB3N25wL3k4cEl0dzJickp6TmZWK0R5Wk1INlFUeVVPSFVhek5hQVBnUVF4WWhtSVB6CnpFb01HME51Nzk4SHZRMUdYSzVXVmYrUS83amRBQkEwK3BxMk9NeitOWXd3c3VWNFNFKzlyZ1ZwR2ZkdUJWTEcKWkpNMnVYbTZhQUV2Qk5tS3pwWS9yU2JvMk5tTkkrUUROUXA5a0g3T2NQWkxOeTBzZml3Qi9FWTIrWkg3VEt2TQptdjN5aEtOZWI4MVpGd1BsbXNGR3dyQzQ4M3BPRnpuRFJPOTgzRnNwTkY3a2FqWUdsaUJMSU5rTG5wRUJhRnJCCmV6TEpGRWpzaUY3emtUSUxtSEk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K`
var serverCert = `-----BEGIN CERTIFICATE-----
MIID+jCCAuKgAwIBAgIUN8pwL1dfWbOtt2m0rRzLvgSN9YcwDQYJKoZIhvcNAQEL
BQAwZzELMAkGA1UEBhMCQVUxDDAKBgNVBAgMA05TVzEPMA0GA1UEBwwGU3lkbmV5
MRkwFwYDVQQKDBBTb2Z0d2FyZSBDb21wYW55MQswCQYDVQQLDAJJVDERMA8GA1UE
AwwIc3Bhcmtqb2IwHhcNMjQwMjE4MDQ1OTAzWhcNMjYwMjE3MDQ1OTAzWjBoMQsw
CQYDVQQGEwJXTzEOMAwGA1UECBMFV29ybGQxDjAMBgNVBAcTBVdvcmxkMRkwFwYD
VQQKExBTb2Z0d2FyZSBDb21wYW55MQswCQYDVQQLEwJJVDERMA8GA1UEAxMIcG9z
dGdyZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC0IIDpy1FnF8PD
8/dDyS6GD2gLTSWspsLNN9HD6SbdfLFh/iOvZ6FoYtxrZYA0Ppj890n8JDmkD8d1
cOmTAty8issmF5hIg0zveIGf69zluBfw5UdzqG4cCaiVXjNOMTocTbfSVW7xfjt1
0p+jKslrX1v/aBs3jhFcj7m9Xku1jEpIEFYxkrMEM5pAxkvQPTOc8BP8+8vBxNOS
WGUuJp845iP1BtESoBvEBeMqtABFYy4VFh92wmDQXbc+xtOZbJEvWWb+Nr/QGQF6
rWWV+Q684d6e6kVDvyEJ5lEV48hUqFGUVb0Vn0xePoaMW0YtPAkpXsLD+436tNhE
inmv7IUhAgMBAAGjgZwwgZkwVwYDVR0RBFAwToIIcG9zdGdyZXOCCHBvc3RncmVz
giJwb3N0Z3Jlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsghRwb3N0Z3Jlcy5k
ZWZhdWx0LnN2YzAdBgNVHQ4EFgQUxte2czhQFM2yTEv2VnxWtgoLHf0wHwYDVR0j
BBgwFoAUOhSILYFgWCeofIu1cPqkHkLm0lQwDQYJKoZIhvcNAQELBQADggEBAGDm
fBZxGPxB4e31v43HsY2Qhq3X8verABKpoJDm+mKWZR6ELtI5IItRIO8yipSdIcry
FF1R+GusldiJju0w7np/y8pItw2brJzNfV+DyZMH6QTyUOHUazNaAPgQQxYhmIPz
zEoMG0Nu798HvQ1GXK5WVf+Q/7jdABA0+pq2OMz+NYwwsuV4SE+9rgVpGfduBVLG
ZJM2uXm6aAEvBNmKzpY/rSbo2NmNI+QDNQp9kH7OcPZLNy0sfiwB/EY2+ZH7TKvM
mv3yhKNeb81ZFwPlmsFGwrC483pOFznDRO983FspNF7kajYGliBLINkLnpEBaFrB
ezLJFEjsiF7zkTILmHI=
-----END CERTIFICATE-----`

var serverCertDoubleEncoded = `TFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUXJha05EUVhWTFowRjNTVUpCWjBsVlRqaHdkMHd4WkdaWFlrOTBkREp0TUhKU2VreDJaMU5PT1ZsamQwUlJXVXBMYjFwSmFIWmpUa0ZSUlV3S1FsRkJkMXA2UlV4TlFXdEhRVEZWUlVKb1RVTlJWbFY0UkVSQlMwSm5UbFpDUVdkTlFUQTFWRlo2UlZCTlFUQkhRVEZWUlVKM2QwZFZNMnhyWW0xV05RcE5VbXQzUm5kWlJGWlJVVXRFUWtKVVlqSmFNR1F5Um5sYVUwSkVZakl4ZDFsWE5UVk5VWE4zUTFGWlJGWlJVVXhFUVVwS1ZrUkZVazFCT0VkQk1WVkZDa0YzZDBsak0wSm9ZMjEwY1dJeVNYZElhR05PVFdwUmQwMXFSVFJOUkZFeFQxUkJlbGRvWTA1TmFsbDNUV3BGTTAxRVVURlBWRUY2VjJwQ2IwMVJjM2NLUTFGWlJGWlJVVWRGZDBwWVZIcEZUMDFCZDBkQk1WVkZRMEpOUmxZeU9YbGlSMUY0UkdwQlRVSm5UbFpDUVdOVVFsWmtkbU50ZUd0TlVtdDNSbmRaUkFwV1VWRkxSWGhDVkdJeVdqQmtNa1o1V2xOQ1JHSXlNWGRaVnpVMVRWRnpkME5SV1VSV1VWRk1SWGRLU2xaRVJWSk5RVGhIUVRGVlJVRjRUVWxqUnpsNkNtUkhaSGxhV0UxM1oyZEZhVTFCTUVkRFUzRkhVMGxpTTBSUlJVSkJVVlZCUVRSSlFrUjNRWGRuWjBWTFFXOUpRa0ZSUXpCSlNVUndlVEZHYmtZNFVFUUtPQzlrUkhsVE5rZEVNbWRNVkZOWGMzQnpURTVPT1VoRU5sTmlaR1pNUm1ndmFVOTJXalpHYjFsMGVISmFXVUV3VUhCcU9Ea3diamhLUkcxclJEaGtNUXBqVDIxVVFYUjVPR2x6YzIxR05XaEpaekI2ZG1WSlIyWTJPWHBzZFVKbWR6VlZaSHB4UnpSalEyRnBWbGhxVGs5TlZHOWpWR0ptVTFaWE4zaG1hblF4Q2pCd0sycExjMnh5V0RGMkwyRkNjek5xYUVaamFqZHRPVmhyZFRGcVJYQkpSVVpaZUd0eVRVVk5OWEJCZUd0MlVWQlVUMk00UWxBNEt6aDJRbmhPVDFNS1YwZFZkVXB3T0RRMWFWQXhRblJGVTI5Q2RrVkNaVTF4ZEVGQ1JsbDVORlpHYURreWQyMUVVVmhpWXl0NGRFOWFZa3BGZGxkWFlpdE9jaTlSUjFGR05ncHlWMWRXSzFFMk9EUmtObVUyYTFaRWRubEZTalZzUlZZME9HaFZjVVpIVlZaaU1GWnVNSGhsVUc5aFRWY3dXWFJRUVd0d1dITk1SQ3MwTXpaMFRtaEZDbWx1YlhZM1NWVm9RV2ROUWtGQlIycG5XbmQzWjFwcmQxWjNXVVJXVWpCU1FrWkJkMVJ2U1VsalJ6bDZaRWRrZVZwWVQwTkRTRUoyWXpOU2JtTnRWbm9LWjJsS2QySXpUakJhTTBwc1kzazFhMXBYV21oa1YzZ3dURzVPTWxsNU5XcGlTRlo2WkVkV2VVeHRlSFpaTWtaeloyaFNkMkl6VGpCYU0wcHNZM2sxYXdwYVYxcG9aRmQ0TUV4dVRqSlpla0ZrUW1kT1ZraFJORVZHWjFGVmVIUmxNbU42YUZGR1RUSjVWRVYyTWxadWVGZDBaMjlNU0dZd2QwaDNXVVJXVWpCcUNrSkNaM2RHYjBGVlQyaFRTVXhaUm1kWFEyVnZaa2wxTVdOUWNXdElhMHh0TUd4UmQwUlJXVXBMYjFwSmFIWmpUa0ZSUlV4Q1VVRkVaMmRGUWtGSFJHMEtaa0phZUVkUWVFSTBaVE14ZGpRelNITlpNbEZvY1ROWU9IWmxja0ZDUzNCdlNrUnRLMjFMVjFwU05rVk1kRWsxU1VsMFVrbFBPSGxwY0ZOa1NXTnllUXBHUmpGU0swZDFjMnhrYVVwcWRUQjNOMjV3TDNrNGNFbDBkekppY2twNlRtWldLMFI1V2sxSU5sRlVlVlZQU0ZWaGVrNWhRVkJuVVZGNFdXaHRTVkI2Q25wRmIwMUhNRTUxTnprNFNIWlJNVWRZU3pWWFZtWXJVUzgzYW1SQlFrRXdLM0J4TWs5TmVpdE9XWGQzYzNWV05GTkZLemx5WjFad1IyWmtkVUpXVEVjS1drcE5NblZZYlRaaFFVVjJRazV0UzNwd1dTOXlVMkp2TWs1dFRra3JVVVJPVVhBNWEwZzNUMk5RV2t4T2VUQnpabWwzUWk5RldUSXJXa2czVkV0MlRRcHRkak41YUV0T1pXSTRNVnBHZDFCc2JYTkdSM2R5UXpRNE0zQlBSbnB1UkZKUE9UZ3pSbk53VGtZM2EyRnFXVWRzYVVKTVNVNXJURzV3UlVKaFJuSkNDbVY2VEVwR1JXcHphVVkzZW10VVNVeHRTRWs5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCg==`

func TestPEMCertificateAttr(t *testing.T) {
	certificates := []string{
		serverCertEncoded,
		serverCert,
		serverCertDoubleEncoded,
	}
	for _, cert := range certificates {
		result, err := ExtractCertificateAttributes(cert)
		if err != nil {
			t.Error(err)
		}
		if result["common-name"] != "postgres" {
			t.Errorf("returned certificate data is not accurate. expected %s, actual %s", "postgres", result["common-name"])
		}
	}
}
